AWSTemplateFormatVersion: 2010-09-09

Description: This script create an EC2 has bootstrap script with a Role and a VPC corresponding

Metadata:
  Instance: 
    Description: Instance will based on an ubuntu 20 (free tier)
  VPC:
    Description: A VPC contains 1 public subnet and 1 private subnet
  Role:
    Description: A new Role will be created. This role will have the ability to access a specific RDS
  RDS:
    Description: A new RDS with a specific name will be created if it doesn't exist.
  

  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: 'Project Setup'
        Parameters:
          - ProjectName
          - ProjectEnvironment
      
      - Label:
          default: 'VPC configuration'
        Parameters:
          - VpcCIDRBlock
          - PublicCIDRBlock
          - PrivateCIDRBlock

    ParameterLabels:
      ProjectName:
        default: 'Project name'
      ProjectEnvironment:
        default: 'Project environment'
      VpcCIDRBlock:
        default: 'Type of EC2 Instance'
      PublicCIDRBlock:
        default: 'Public subnet CIDR'
      PrivateCIDRBlock:
        default: 'Private subnet CIDR'

Parameters:
  Ec2KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: You have to specify a key name to create EC2 instance

  InstanceType:
    Type: String
    Default: t2.micro
    ConstraintDescription: This template only allow 2 type of instance, which is [t2.micro, t2.nano]
    AllowedValues:
      - t2.micro
      - t2.nano

  SSHAllowIps:
    Type: String
    AllowedPattern: "([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})/([0-9]{1,2})"
    ConstraintDescription: You need to specify IP range can ssh to this EC2 instance
  
  ProjectName:
    Type: String
    Default: demo

  ProjectEnvironment:
    Type: String
    Default: test

  VpcCIDRBlock:
    Type: String
    Default: 10.0.0.0/16

  PublicCIDRBlock:
    Type: String
    Default: 10.0.0.0/24

  PrivateCIDRBlock:
    Type: String
    Default: 10.0.1.0/24

# Mappings: 

# Conditions: 

Resources: 
  VPCNetwork:
    Type: AWS::CloudFormation::Stack
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      TemplateURL: >-
        https://raw.githubusercontent.com/kumcp/aws-learning-example/main/CF/cd-lab2/nested-stack/common-network.yaml
      Parameters:
        ProjectName: !Ref ProjectName
        ProjectEnvironment: !Ref ProjectEnvironment
        VpcCIDRBlock: !Ref VpcCIDRBlock
        PublicCIDRBlock: !Ref PublicCIDRBlock
        PrivateCIDRBlock: !Ref PrivateCIDRBlock
  
  WorkloadInstance:
    Type: AWS::CloudFormation::Stack
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      TemplateURL: >-
        https://raw.githubusercontent.com/kumcp/aws-learning-example/main/CF/cd-lab2/single-resource-stack/ec2-with-sg.yaml
      Parameters:
        ProjectName: !Ref ProjectName
        ProjectEnvironment: !Ref ProjectEnvironment
        VPC: !GetAtt VPCNetwork.Outputs.VPCId
        Subnet: !GetAtt VPCNetwork.Outputs.PublicSubnetId
        InstanceType: !Ref InstanceType
        SSHAllowIps: !Ref SSHAllowIps
        KeyName: !Ref Ec2KeyName
        OpenHTTP: 'yes'

#   RDS:

# Outputs: